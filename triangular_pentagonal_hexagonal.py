# Triangular pentagonal and hexagonal numbers are generated by:
# triangle: T_n = n(n + 1) / 2
# pentagon: P_n = n(3n - 1) / 2
# hexagonal: H_n = n(2n - 1)
# It can be verified that T_285 = P_165 = P_143 = 40755
# find the next triangle number that is also pentagonal and hexagonal

def generate_pentagonal_num(n_terms: int) -> set:
    """Generate pentagonal numbers set"""
    pentagonal_set = set()
    for i in range(1, n_terms + 1):
        pn = i * (3 * i - 1) // 2
        pentagonal_set.add(pn)
    return pentagonal_set

def generate_hexagonal_num(n_terms: int) -> set:
    """Generate hexagonal numbers set"""
    hexagonal_set = set()
    for i in range(1, n_terms + 1):
        hn = i * (2 * i - 1)
        hexagonal_set.add(hn)

    return hexagonal_set

def main():
    pentagonal_set = generate_pentagonal_num(50_000)
    hexagonal_set = generate_hexagonal_num(50_000)
    # start from 286th term
    for i in range(286, 500_000):
        tn = i * (i + 1) // 2
        
        if tn in pentagonal_set and tn in hexagonal_set:
            return tn
        
if __name__ == '__main__':
    num = main()
    print(num)